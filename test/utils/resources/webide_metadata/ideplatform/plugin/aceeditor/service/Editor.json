{
    "name": "sap.watt.common.plugin.aceeditor.service.Editor",
    "description" : "The <i>editor</i> service ",
    "visibility" : "public",
	"extends" : [
		"sap.watt.common.service.editor.Editor",
		"sap.watt.common.service.editor.UndoRedo",
		"sap.watt.common.service.editor.CodeCompletion"
	],
	"configurationProperties" : {
		"modes" : {
			"type" : {
				"type" : "string",
				"description" : "string",
				"extension" : "string",
				"path" : "string"
			},
			"multiple" : true,
			"visibility" : "hidden"
		},
		"modeExtension" : {
			"type" : {
				"type" : "string",
				"extension" : "string"
			},
			"multiple" : true,
			"visibility" : "hidden"
		},
		"editorContextMenu" : {
			"type" : {
				"extension" : "string",
				"menuGroup" : "string"
			},
			"multiple" : true,
			"visibility" : "hidden"
		},
		"editorGutterContextMenu" : {
			"type" : {
				"extension" : "string",
				"menuGroup" : "string"
			},
			"multiple" : true,
			"visibility" : "hidden"
		},
		"todoTag" : {
			"type" : "string",
			"multiple" : false,
			"visibility" : "hidden"
		}
	},
	
	"methods": {
		"getContentStatus": {
			"description" : "This method returns the editor content status",
			"params": [
				{
					"name": "bCheckPosition",
					"type": "boolean",
					"description" : "Check position"
				},
				{
					"name": "bCheckString",
					"type": "boolean",
					"description" : "Check string"
				},
				{
					"name": "oEditor",
					"type": "object",
					"description" : "UI5 Editor controller"
				}
			],
			"returns": {
				"type" : "object",
				"description" : "Return the content status object"
			},
			"visibility" : "hidden"

		},
		"getContentStatusByPosition": {
			"description" : "This method returns content status by position",
			"params": [
				{
					"name": "oPosition",
					"type": "object",
					"description" : "Position"
				}
			],
			"returns": {
				"type" : "object",
				"description" : "Return the content status object by position"
			},
			"visibility" : "hidden"
		},
		"getCurrentSelection": {
			"description" : "This method returns content status by position",
			"params": [
				{
					"name": "oEditor",
					"type": "object",
					"description" : "UI5 Editor controller"
				}
			],
			"returns": {
				"type" : "string",
				"description" : "Return current selection"
			},
			"visibility" : "hidden"
		},
		"cutCurrentSelection": {
			"description" : "This method cuts current selection",
			"params": [
				{
					"name": "oEditor",
					"type": "object",
					"description" : "UI5 Editor controller"
				}
			],
			"returns": {
				"type" : "string",
				"description" : "Return selection"
			},
			"visibility" : "hidden"
		},
		"addString": {
			"description" : "This method add string according to cursor position",
			"params": [
				{
					"name": "sText",
					"type": "string",
					"description" : "Text to add"
				},
				{
					"name": "oEditor",
					"type": "object",
					"description" : "UI5 Editor controller"
				},
				{
					"name": "bIndentNewLines",
					"type": "boolean",
					"description" : "Indent new lines or not"
				}
			],
			"visibility" : "hidden"
		},
		"deleteCurrentSelection": {
			"description" : "This method deletes the current selection",
			"visibility" : "hidden"
		},
		"getSelectionRanges": {
			"description" : "This method returns selection range",
			"params": [
				{
					"name": "oEditor",
					"type": "object",
					"description" : "UI5 Editor controller"
				}
			],
			"returns": {
				"type" : "[object]",
				"description" : "Return selection ranges"
			},
			"visibility" : "hidden"
		},
		
		"setSelectionRange": {
			"description" : "This method sets selection range",
			"params": [
								{
					"name": "oPosition",
					"type": "object",
					"description" : "object with two fields of int- row, column"
				},
					{
					"name": "ilength",
					"type": "number",
					"description" : "length of the string to be selected"
				}
			],
			"visibility" : "hidden"
		},
		
		"setHighlight": {
			"description" : "This method sets the data to be highlighted",
			"params": [
				{
					"name": "data",
					"type": "[object]",
					"description" : "Data to highlight"
				},
				{
					"name": "clazz",
					"type": "string",
					"description" : "CSS class"
				},
				{
					"name": "type",
					"type": "string",
					"optional": true,
					"description" : "type of highligt"
				}
			],
			"returns": {
				"type" : "[object]",
				"description" : "Return the highlighted data"
			},
			"visibility" : "hidden"
		},
		"showFind": {
			"description" : "This method will show the find ui of ace editor",
			"visibility" : "hidden"
		},
		"showReplace": {
			"description" : "This method will show the replace ui of ace editor",
			"visibility" : "hidden"
		},
		"getUI5Editor": {
			"description" : "This method returns the ace editor",
			"returns": {
				"type" : "object",
				"description" : "Return the UI5 Editor controller"
			},
			"visibility" : "hidden"
		},
		"addEventListener": {
			"description" : "This method adds event listener",
			"params": [
				{
					"name": "name",
					"type": "string",
					"description" : "Event name"
				},
				{
					"name": "handler",
					"type": "object",
					"description" : "Event handler"
				}
			],
			"visibility" : "hidden"
		},
		"removeEventListener": {
			"description" : "This method removes event listener",
			"params": [
				{
					"name": "name",
					"type": "string",
					"description" : "Event name"
				},
				{
					"name": "handler",
					"type": "object",
					"description" : "Event handler"
				}
			],
			"visibility" : "hidden"
		},
		"indexToPosition": {
			"description" : "This method convert index to position",
			"params": [
				{
					"name": "index",
					"type": "object",
					"description" : "Index"
				},
				{
					"name": "startRow",
					"type": "object",
					"description" : "Start row"
				}
			],
			"returns": {
				"type" : "object",
				"description" : "Return position"
			},
			"visibility" : "hidden"
		},
		"positionToIndex": {
			"description" : "This method convert position to index",
			"params": [
				{
					"name": "pos",
					"type": "object",
					"description" : "position"
				},
				{
					"name": "startRow",
					"type": "object",
					"description" : "Start row"
				}
			],
			"returns": {
				"type" : "object",
				"description" : "Return index"
			},
			"visibility" : "hidden"
		},
		"getMarkers": {
			"description" : "This method returns the markers",
			"params": [
				{
					"name": "inFront",
					"type": "object",
					"description" : ""
				}
			],
			"returns": {
				"type" : "object",
				"description" : "Return markers"
			},
			"visibility" : "hidden"
		},
		"removeMarker": {
			"description" : "This method removes the marker",
			"params": [
				{
					"name": "markerId",
					"type": "object",
					"description" : ""
				}
			],
			"visibility" : "hidden"
		},
		"addMarker": {
			"description" : "This method adds marker",
			"params": [
				{
					"name": "range",
					"type": "object",
					"description" : "Rang"
				},
				{
					"name": "clazz",
					"type": "object",
					"description" : "CSS class"
				},
				{
					"name": "type",
					"type": "object",
					"description" : "Type"
				},
				{
					"name": "inFront",
					"type": "object",
					"description" : "s"
				}
			],
			"returns": {
				"type" : "object",
				"description" : "Return marker"
			},
			"visibility" : "hidden"
		},
		"clearAnnotations": {
			"description" : "This method clears the annotations",
			"visibility" : "hidden"
		},

		"setAnnotations": {
			"description" : "Sets annotations.",
			"params": [
				{
					"name": "annotations",
					"type": "object",
					"description" : "The annotations object."
				},
				{
					"name": "enableLiveLinting",
					"type": "boolean",
					"description" : "Enables live linting."
				}
			],
			"visibility" : "public"
		},
		"getAnnotations": {
			"description" : "This method returns annotations",
			"returns": {
				"type" : "object",
				"description" : "Return annotations"
			},
			"visibility" : "hidden"
		},
		"getCurrentRowAnnotations": {
			"description" : "This method returns the current row annotations",
			"returns": {
				"type" : "[object]",
				"description" : "Return current row annotations"
			},
			"visibility" : "hidden"
		},
		"gotoLine": {
			"description" : "Enables you to go to a specified line.",
			"params": [
				{
					"name": "lineNumber",
					"type": "object",
					"description" : "Specifies the line number."
				},
				{
					"name": "column",
					"type": "object",
					"description" : "Specifies the column."
				},
				{
					"name": "animate",
					"type": "object",
					"description" : "The <i>animate</i> object."
				}
			],
			"visibility" : "public"
		},
		"getRange": {
			"description" : "This method returns the range",
			"params": [
				{
					"name": "iStartRow",
					"type": "number",
					"description" : "Start row"
				},
				{
					"name": "istartColumn",
					"type": "number",
					"description" : "Start column"
				},
				{
					"name": "iEndRow",
					"type": "number",
					"description" : "End row"
				},
				{
					"name": "iEndCoulmn",
					"type": "number",
					"description" : "End coulmn"
				}
			],
			"returns": {
				"type" : "object",
				"description" : "Return range"
			},
			"visibility" : "hidden"
		},
		"getFileURI": {
			"description" : "This method returns the file URI",
			"returns": {
				"type" : "string",
				"description" : "Return file URI"
			},
			"visibility" : "hidden"
		},
		"getCurrentFilePath": {
			"description" : "This method returns the current file path",
			"returns": {
				"type" : "string",
				"description" : "Return current file path"
			},
			"visibility" : "hidden"
		},
		"setModuleUrl": {
			"description" : "This method sets module URL",
			"params": [
				{
					"name": "type",
					"type": "object",
					"description" : "Type"
				},
				{
					"name": "path",
					"type": "string",
					"description" : "Path"
				}
			],
			"visibility" : "hidden"
		},
		"setTheme" : {
			"description" : "This method sets the theme",
			"params": [
				{
					"name": "sTheme",
					"type": "string",
					"description" : "Theme"
				}
			],
			"visibility" : "hidden"
		},
		"getTheme" : {
			"description" : "This method returns the theme",
			"returns": {
				"type" : "string",
				"description" : "Return the theme"
			},
			"visibility" : "hidden"
		},
		"setFontFamily": {
			"description" : "This method sets the font family",
				"params" : [
					{
						"description" : "Font family",
						"name" : "fontFamily",
						"type" : "string"
			 } ],
			"visibility" : "hidden"
		 },
		 "setFontSize": {
			"description" : "This method sets the font size",
				"params" : [
					{
						"description" : "Font size",
						"name" : "iFontSize",
						"type" : "number"
				} ],
			"visibility" : "hidden"
		},
		"setFocus" :{
			"description" : "This method sets the focus",
			"visibility" : "hidden"
		},
		"toggleComment":{
			"description" : "This method toggle a comment",
			"visibility" : "hidden"
		},
		"toggleBlockComment":{
			"description" : "This method toggle a block comment",
			"visibility" : "hidden"
		},
		"getSelectionRange":{
			"description" : "This method returns selection range",
			"returns": {
				"type" : "object",
				"description" : "Return selection range"
			},
			"visibility" : "hidden"
		},
		"getVisible":{
			"description" : "This method returns if visible or not",
			"returns": {
				"type" : "boolean",
				"description" : "Return visible or not"
			},
			"visibility" : "hidden"
		},
		"toggleShowInvisibles":{
			"description" : "This method toggle show invisibles",
			"visibility" : "hidden"
		},
		"getName":{
			"description" : "This method returns the editor name",
			"returns": {
				"type" : "string",
				"description" : "Return editor name"
			},
			"visibility" : "hidden"
		},
		"addTodo":{
			"description" : "This method adds todo",
			"visibility" : "hidden"
		},
		"expandAll":{
			"description" : "This method expands all",
			"visibility" : "hidden"
		},
		"collapseAll":{
			"description" : "This method collapse all",
			"visibility" : "hidden"
		},
		"executeCommand":{
			"description" : "This method execue command",
			"visibility" : "hidden"
		},
		"getReadOnly":{
			"description" : "This method returns the Read Only",
			"returns": {
				"type" : "boolean",
				"description" : "Return Read Only"
			},
			"visibility" : "hidden"
		},
		"hasTodoTag":{
			"description" : "This method returns true if there's todo tag",
			"returns": {
				"type" : "boolean",
				"description" : "Return true if has todo tag"
			},
			"visibility" : "hidden"
		}
	},
	"events" : {
		"rendered" : {
			"description" : "It's the timing when the inner editor is rendered.",
			"visibility" : "hidden"
		},
		"changeSession" : {
			"description" : "It's the timing when the editor changed to a new session.",
			"visibility" : "hidden"
		},
		"beforeClosing" : {
			"description" : "It's the timing before the current file is closed.",
			"visibility" : "hidden"
		},
		"init" : {
			"description" : "It's the timing when the editor is inited.",
			"visibility" : "hidden"
		},
		"scroll" : {
			"description" : "It's the timing when the editor is scrolled.",
			"visibility" : "hidden"
		}
	}
}