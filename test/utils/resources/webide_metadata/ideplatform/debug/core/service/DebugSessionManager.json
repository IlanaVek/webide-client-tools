{
  "name": "sap.watt.ideplatform.debug.core.service.DebugSessionManager",
  "description": "Interface for managing debug sessions",
  "methods": {
    "getModel": {
      "description": "Returns the model representation associated with this debug session manager to be used for data bindings.",
      "returns": {
        "type": "object",
        "description": "The model to be used for data bindings."
      }
    },
    "addDebugSession": {
      "description": "Adds the given debug session to the collection of registered debug sessions and notifies all registered listeners. This has no effect if the given debug session is already registered.",
      "params": [
        {
          "name": "debugSession",
          "type": "sap.watt.ideplatform.debug.core.model.DebugSession",
          "description": "The debug session to add."
        }
      ]
    },
    "removeDebugSession": {
      "description": "Removes the debug session from the collection of registered debug sessions and notifies all registered listeners.",
      "params": [
        {
          "name": "debugSession",
          "type": "sap.watt.ideplatform.debug.core.model.DebugSession",
          "description": "The debug session to remove."
        }
      ]
    },
    "removeDebugSessions": {
      "description": "Removes the debug sessions from the collection of registered debug sessions and notifies all registered listeners.",
      "params": [
        {
          "name": "debugSessions",
          "type": "array",
          "items": {
            "type": "sap.watt.ideplatform.debug.core.model.DebugSession"
          },
          "description": "An array containg the registered debug sessions to remove."
        }
      ]
    },
    "getDebugSessions": {
      "description": "Returns an array of debug sessions registered for the given debug model identifier. If the identifier is omitted all registered debug sessions are returned.",
      "params": [
        {
          "name": "debugModelId",
          "type": "string",
          "optional": true,
          "description": "The debug model identifier."
        }
      ],
      "returns": {
        "type": "array",
        "items": {
          "type": "sap.watt.ideplatform.debug.core.model.DebugSession"
        },
        "description": "The debug sessions matching the given debug model identifier or all debug sessions if omitted."
      }
    }
  },
  "events": {
    "debugSessionsChanged": {
      "description": "Notifies listeners that debug session(s) have been added or removed.",
      "params": [
        {
          "name": "changes",
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "debug session change details."
        }
      ]
    },
    "threadSuspended": {
      "description": "Notifies listeners that a thread has been suspended.",
      "params": [
        {
          "name": "thread",
          "type": "sap.watt.ideplatform.debug.core.model.Thread",
          "description": "The thread the virtual machine stopped on"
        },
        {
          "name": "reason",
          "type": "string",
          "description": "The suspend reason - either 'stepOver, stepInto, stepOut, clientRequest, breakpoint, evaluate, unspecified'"
        },
        {
          "name": "stackFrame",
          "type": "sap.watt.ideplatform.debug.core.model.StackFrame",
          "optional": true,
          "description": "The stack frame the virtual machine stopped on or undefined"
        },
        {
          "name": "breakpoint",
          "type": "sap.watt.ideplatform.debug.core.model.Breakpoint",
          "optional": true,
          "description": "The breakpoint the virtual machine stopped on if the reason is 'breakpoint', undefined otherwise"
        }
      ]
    },
    "threadResumed": {
      "description": "Notifies listeners that a thread has been resumed.",
      "params": [
        {
          "name": "thread",
          "type": "sap.watt.ideplatform.debug.core.model.Thread",
          "description": "The thread that has been resumed."
        }
      ]
    },
    "threadStarted": {
      "description": "Notifies listeners that a new thread has started.",
      "params": [
        {
          "name": "thread",
          "type": "sap.watt.ideplatform.debug.core.model.Thread",
          "description": "The new thread that has started."
        }
      ]
    },
    "threadEnded": {
      "description": "Notifies listeners that some thread has ended.",
      "params": [
        {
          "name": "thread",
          "type": "sap.watt.ideplatform.debug.core.model.Thread",
          "description": "The thread that has ended."
        }
      ]
    }
  }
}
