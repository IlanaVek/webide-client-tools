{
	"name" : "sap.watt.common.service.template.Template",
	"description": "The <i>template</i> interface. A template must provide a template module (a JavaScript file referenced from the <i>template</i> property of the template configuration), implementing these interface methods, which can be used as extension points for the generation process and behavior of the template's generation wizard.",
	"exposedAsInterface":true,
	"visibility": "public",
	"methods" : {
		"onBeforeTemplateGenerate" : {
			"description" : "Applies the template logic before generating the template resources into the provided .zip file. It is executed before passing the model to the template resources, and is therefore ideal for model manipulations.",
			"visibility": "public",
			"params" : [{
				"name" : "templateZip",
				"type" : "object",
				"description" : "A JSZip object containing the generated project resources that are generated according to the template resources."
			},
			{
				"name" : "model",
				"type" : "object",
				"description" : "JSON object that includes the data provided by all the wizard steps that are used for generating the template."
			}] 
		},
		
		"onAfterGenerate" : {
			"description" : "This method is executed after generating the new project's .zip file, but before extracting its files to the SAP Web IDE workspace. Therefore, this method is ideal for manipulating the generated project files, for example: renaming files according to the template model.",
			"visibility": "public",
			"params" : [{
				"name" : "projectZip",
				"type" : "object",
				"description" : "a JSZip object containing the generated project resources after applying the model parameters on the template resources."
			},
			{
				"name" : "model",
				"type" : "object",
				"description" : "JSON object that includes the data provided by all the wizard steps used for generating the template."
			}] 
		},
		
		"customValidation" : {
			"description" : "The current validation infrastructure checks whether the template can be selected in the wizard within the context of the user selections (using project type validation). This is used for preventing the user from selecting a template when it is not appropriate according to previous selections in the generation wizard or workspace. Use this method to add more validations, if needed.",
			"visibility": "public",
			"params" : [{
				"name" : "model",
				"type" : "object",
				"description" : "The template model that is created in the generation wizard based on user selections."
			}],
		    "returns" : {
                "type" : "boolean",
                "default" :  true,
                "description" : "Returns <i>true</i> if validation succeeds, or <i>false</i> if validation fails."
                
            }
		},
		
		"validateOnSelection" : {
			"description" : "We recommend that you use the <i>customValidation</i> method instead.",
			"visibility": "hidden",
			"params" : [{
				"name" : "model",
				"type" : "object",
				"description" : "The template model that is created in the generation wizard based on user selections."
			}],
			"returns": {
					"type" : "boolean",
					"default" :  true,
					"description" : "Returns true if the template is valid for selection according to given model, or throws an error with the appropriate message if validation fails."
			 },
            "deprecated" : {
                "since" : "1.12",
                "description" : "Use customValidation method instead."
            }
		},
		
		"onBeforeTemplateCustomizationLoaded" : {
			"visibility": "public",
			"description" : "In this method, the template developer can configure the template model and wizard model before the template customization step loads the UI; for example, when a user wants to set one of the template model parameters as the component path.",
		    "params" : [{
				"name" : "wizardModel",
				"type" : "object",
				"description" : "The model that contains the wizard parameters and values set by the previous wizard steps."
			},{
			   	"name" : "templateModel",
				"type" : "object",
				"description" : "The model representing the model.json of the template."
			}],
			"returns" : {
				"type" : "[object]",
				"description" : "An array of models, including the wizard and template models."
			}
		},
		
		"configWizardSteps" : {
			"description" : "Configures the wizard steps that appear after the template is selected in the wizard. The method arguments are the wizard step objects that appear after selecting the template. This method is used to set up step parameters and event handlers that define appropriate relations between steps; for example, defining how step 2 handles changes that occur in step 1.",
			"visibility": "public",
			"params" : [{
				"name" : "wizardStep",
				"type" : "object",
				"description" : "The wizard steps that appear after the template is selected in the wizard."
			}],
			"returns" : {
				"type" : "[object]",
				"description" : "An array of wizard step objects."
			}
		}
	}
}
