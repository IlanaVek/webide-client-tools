{
	"name": "sap.watt.saptoolsets.ui5.common.ui5librarymetadata.service.UI5LibraryMetadata",
	"description": "The ui5librarymetadata service interface",
	"configurationProperties": {
		"providers": {
			"type": {
				"service": "sap.watt.common.service.ide.UI5LibraryMetadataProvider",
				"serverType": ["string"]
			},
			"multiple": true
		},
		"fallbackSubLibraries" : {
			"type" : ["string"],
			"multiple" : false
		}
	},
	"methods": {
		"getProjectVersion": {
			"description": "Gets project version object",
			"params": [{
				"name": "oDocument",
				"type": "object",
				"description": "Document Data"
			}],
			"returns": {
				"type": "object",
				"description": "Version details object"
			}
		},
		
		"setProjectVersion": {
			"description": "Updates the project version",
			"params": [{
				"name": "sVersion",
				"type": "string",
				"description": "Library version"
			}, {
				"name": "oDocument",
				"type": "object",
				"description": "Document Data"
			}]
		},
		
		"getProjectSubLibraries": {
			"description": "Return dependency libraries from manifest that also appear in all sub libraries for a given version or just dependencies if bValidate is false",
			"params": [{
				"name": "oDocument",
				"type": "object",
				"description": "Document Data"
			}, {
				"name": "bDontValidate",
				"type": "boolean",
				"description": "Optional. Whether or not return all manifest dependencies or only libraries that appear in sub libraries of the version"
			}],
			"returns": {
				"type": "[string]",
				"description": "if bDontValidate is true - all dependencies from manifest, else - only dependencies that appear in sub libraries"
			}
		},
		
		"setProjectSubLibraries": {
			"description": "Returns available sub libraries of a given library and version",
			"params": [{
				"name": "oDocument",
				"type": "object",
				"description": "Document Data"
			},{
				"name": "aSubLibraries",
				"type": "[string]",
				"description": "Array of strings containing sublibraries to update in manifest.json dependencies"	
			}]
		},
		
		"areProjectSubLibrariesEditable": {
			"description": "Returns true if manifest.json exist in project, otherwise false",
			"params": [{
				"name": "oDocument",
				"type": "object",
				"description": "Document Data"
			}],
			"returns": {
				"type": "boolean",
				"description": "whether or not manifest.json exist in project"
			}
		},
		
		"isProjectVersionEditable":{
			"description": "Returns true if neo-app.json exist in project, otherwise false",
			"params": [{
				"name": "oDocument",
				"type": "object",
				"description": "Document Data"
			}],
			"returns": {
				"type": "boolean",
				"description": "whether or not neo-app.json exist in project"
			}	
		},
			
		"getVersions": {
			"returns": {
				"type": "[string]",
				"description": "Array of string with the versions found"
			}
		},
		
		"getVersionsOverview": {
			"returns": {
				"type": "[object]",
				"description": "SAPUI5 Versions Maintenance Status and the relevant highest available SAPUI5 Version"
			}
		},
		
		"getActiveVersion": {
			"description": "Returns the active UI5 version",
			"returns": {
				"type": "object",
				"description": "Active UI5 Version"
			}
		},
	
		"getSubLibraries": {
			"description": "Returns available sub libraries of a given library and version",
			"params": [{
				"name": "sVersion",
				"type": "string",
				"description": "Library version"
			}],
			"returns": {
				"type": "[string]",
				"description": "Sub libraries for a given version"
			}
		},
		
		"getMetadata": {
			"params": [{
				"name": "sLibraryType",
				"type": "string",
				"description": "Library type: js, xml .."	
			},{
				"name": "oDocument",
				"type": "object",
				"description": "Document Data"
			}, {
				"name": "bCompressMetadata",
				"type": "boolean",
				"optional": true,
				"description": "Whether returned metadata files should be compressed"
			}],
			"returns": {
				"type": "object",
				"description": "Metadata object with zip files"
			}
		},
		
		"isValidVersion": {
			"description": "Gets a version and return true or false if input version is valid",
			"params": [{
				"name": "sVersion",
				"type": "string",
				"description": "Version to test validation on"	
			}],
			"returns": {
				"type": "boolean",
				"description": "if version is valid - true, else - false"
			}
		}
	},
	"events": {
		"projectConfigurationChanged" : {
			"description" :"Fired when there was a change in UI5 project configuration (version or sub libraries)",
			"params" : [{
				"name" : "projectDocument",
				"type" : "object",
				"description" :"The project document"
			}]
		}
	}

}